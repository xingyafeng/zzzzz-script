@Library('share-library@master') _

pipeline {
    agent {
        node {
            label "${tct_server_x}"
        }
    }

    environment {
        TCT_CC = 'clang'
    }

    stages {

        stage('Build Android Rom Part Zero') {

            failFast true
            parallel {
                stage('download') {

                    steps {
                        script {
                            utils.command("~/workspace/script/zzzzz-script/rom_build.sh download")
                        }
                    }
                }
            }
        }

        stage('Build Android Rom Part One') {

            failFast true
            parallel {
                stage('clean') {

                    steps {
                        script {
                            utils.command("~/workspace/script/zzzzz-script/rom_build.sh clean")
                        }
                    }
                }
            }
        }

        stage('Build Android Rom Part Two') {

            failFast true
            parallel {
                stage('build ap') {

                    steps {
                        script {
                            utils.command("~/workspace/script/zzzzz-script/rom_build.sh ap")
                        }
                    }
                }

                stage('build cp') {

                    steps {
                        script {
                            utils.command("~/workspace/script/zzzzz-script/rom_build.sh cp")
                        }
                    }
                }
            }
        }

        stage('Build Android Rom Part Three') {
            failFast true
            parallel {
                stage('backup rom iamge files') {

                    steps {
                        script {
                            utils.command("~/workspace/script/zzzzz-script/rom_build.sh backup")
                        }
                    }
                }
            }
        }
    }

    // 编译结束后问题的处理
    post {
        always {
            script {
                log.d 'This will <always> run ...'
            }
        }

        success {
            script {
                log.d 'This will <success> run ...'
            }
        }

        failure {
            script {
                log.e 'This will <failure> run ...'
            }
        }

        unstable {
            script {
                log.w 'This will run only if the run was marked as <unstable>'
            }
        }

        changed {
            script {
                log.d 'This will run only if the state of the Pipeline has <changed>'
                log.d 'For example, if the Pipeline was previously failing but is now successful'
            }
        }
    }
}
