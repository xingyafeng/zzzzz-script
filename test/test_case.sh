#!/usr/bin/env bash

##################################
#
#  case知识点:
#
#  1、两个分号
#       在bash中多个语句在一行是用一个分号间隔的。
#       这样两个分号就表示着语句结束，另外加一个空语句，也就是说要执行的语句都完成了。
#
#  2、分号扭号;&
#       除了 ;&结束语句以外，还有一种是 ;;& 来结束语句的用法。但是意义有所不同，;;&的用法是使得条件越来越精确。
#       这里，你只需要知道，条件语句以 ;& 结束的时候，程序执行到这里不会停止，会继续测试下面条件，如果满足继续执行，直到遇到 ;; 或esac
#
#  3、右括号中的模式
#       a. 基本正则
#          -  *是匹配0个或多个任何字符。
#          -  ？是匹配一个字符。可以看做一个占位符。
#          -  [ ]表示一个范围。
#          -  ( )枚举字符串。但是需要转义
#          上面用到了 ;;& 也就是说在匹配了一个模式之后，不会停止，还会继续向下执行
#       b. 枚举字符串
#            (123|456|789 \))echo "匹配(123|456|789|\)";;&
#
#       c. POSIX字符类
#           待测试
#
#   参考:https://www.cnblogs.com/sunsky303/p/13522003.html
#
###################################
function test_case() {

    local ret=${1-}

    case ${ret} in
        1)
            echo '- 1 --> ' ${ret}
            ;&

        2)
            echo '- 2 --> ' ${ret}
            ;&

        3)
            echo '- 3 --> ' ${ret}
            ;&

        4)
            echo '- 4 --> ' ${ret}
            ;&

        5)
            echo '- 5 --> ' ${ret}
           ;;

        *)
            echo 'default'
        ;;
    esac
}